import {Composer, InlineKeyboard} from "grammy";
import {Context} from "@/database/models/context";
import {UserStatus} from "@/database/models/user/user";
import {formatIntWithDot} from "@/helpers/formatIntWithDot";
import {getCachedConfig} from "@/modules/cache/config";

export const composer = new Composer<Context>()
composer.callbackQuery('wallet menu', start)

const text = async (ctx: Context) => {
    const configDb = await getCachedConfig()
    return `üí∞ –ú–æ–π –∫–æ—à–µ–ª–µ–∫:
    
üíµ –ë–∞–ª–∞–Ω—Å: ${formatIntWithDot(ctx.user.balance)} ${configDb.currencyName}
üí∏ –ù–∞ –≤—ã–≤–æ–¥–µ: ${formatIntWithDot(ctx.user.reservedBalance)} ${configDb.currencyName}
`
}

const keyb = (ctx: Context) => {
    return new InlineKeyboard()
        .text("üíµ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "wallet topup provider").row()
        .text("üí∏ –í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞", "wallet withdraw").row()
        .text("üîô –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é", "profile menu")
}
async function start(ctx) {
    return ctx.editMessageText(await text(ctx),{
        reply_markup: keyb(ctx)
    })
}
