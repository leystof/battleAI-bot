import {bot} from "@/utils/bot";
import {InputFile} from "grammy";
import {Match} from "@/database/models/game/match";
import {User} from "@/database/models/user/user";
import {PromptAccuracyResult} from "@/handlers/game/match/prompt/checkResult";
import {getPercent} from "@/helpers/getPercent";
import {getUsername} from "@/helpers/getUsername";
import {createRawApi} from "grammy/out/core/client";

export async function sendMsgPhotoToUser(chatId: number, url: string, text: string) {
    try {
        return bot.api.sendPhoto(chatId, url, {
            caption: text,
            parse_mode: "HTML"
        })
    } catch (e) {
        console.log(e)
    }
}

export async function sendMsgToUser(chatId: number, text: string) {
    try {
        return bot.api.sendMessage(chatId, text, {
            parse_mode: "HTML"
        })
    } catch (e) {}
}

export async function deleteMsg(chatId: number, messageId: number) {
    if (!messageId) return
    try {
        return bot.api.deleteMessage(chatId, messageId)
    } catch (e) {}
}

/**
 * –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –º–∞—Ç—á–∞.
 *
 * @param match    –æ–±—ä–µ–∫—Ç –º–∞—Ç—á–∞
 * @param analyze  —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–º–ø—Ç–æ–≤
 * @param player   –∏–≥—Ä–æ–∫-–ø–æ–ª—É—á–∞—Ç–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param isDraw   –Ω–∏—á—å—è: true/false
 */
export const genMatchPromptResultText = async (
    match: Match,
    analyze: PromptAccuracyResult,
    player: User,
    isDraw: boolean = false
) => {
    const playerIsP1   = match.player1.id === player.id;
    const opponent     = playerIsP1 ? match.player2 : match.player1;

    const playerPrompt = playerIsP1 ? match.player1Prompt : match.player2Prompt;
    const oppPrompt    = playerIsP1 ? match.player2Prompt : match.player1Prompt;

    const playerAcc    = playerIsP1 ? analyze.player1Accuracy : analyze.player2Accuracy;
    const oppAcc       = playerIsP1 ? analyze.player2Accuracy : analyze.player1Accuracy;

    if (isDraw) {
        return `
<b>ü§ù –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ‚Äî –ù–∏—á—å—è.</b>

<b>üñº –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç:</b>
"${analyze.originalPromptRu}"

<b>‚úèÔ∏è –í–∞—à –æ—Ç–≤–µ—Ç:</b>
"${playerPrompt}"

<b>‚úèÔ∏è –û—Ç–≤–µ—Ç —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:</b>
"${oppPrompt}"

<b>üìä –¢–æ—á–Ω–æ—Å—Ç—å:</b>
<b>–í–∞—à–∞ —Ç–æ—á–Ω–æ—Å—Ç—å:</b> ${playerAcc}% 
<b>–¢–æ—á–Ω–æ—Å—Ç—å —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:</b> ${oppAcc}%
<b>–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:</b>
<pre>${analyze.reasoning}</pre>

<b>üí∞ –°—Ç–∞–≤–∫–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –æ–±–æ–∏–º –∏–≥—Ä–æ–∫–∞–º.
(–∑–∞ –≤—ã—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã 10%)</b>

<b>üë§ –°–æ–ø–µ—Ä–Ω–∏–∫:</b> ${await getUsername(opponent, opponent.usernameVisibility)}
        `;
    }

    /* ----------  –í –´ –ò –ì –† –´ –®  /  –ü –† –û –ò –ì –† –´ –®  ---------- */
    const won        = playerAcc > oppAcc;

    const heading    = won
        ? "<b>üèÜ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ‚Äî –í—ã –ø–æ–±–µ–¥–∏–ª–∏!</b>"
        : "<b>üôà –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ‚Äî –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.</b>";

    const yourLabel  = won ? "‚úÖ –í–∞—à –æ—Ç–≤–µ—Ç"     : "‚ùå –í–∞—à –æ—Ç–≤–µ—Ç";
    const oppLabel   = won ? "‚ùå –û—Ç–≤–µ—Ç —Å–æ–ø–µ—Ä–Ω–∏–∫–∞" : "‚úÖ –û—Ç–≤–µ—Ç —Å–æ–ø–µ—Ä–Ω–∏–∫–∞";

    const payoutText = won
        ? `<b>üí∞ –í—ã–∏–≥—Ä—ã—à:</b> ${match.bet * 2 - getPercent(match.bet * 2, 10)} ‚ÇΩ
(–∑–∞ –≤—ã—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã 10%)`
        : `<b>üí∞ –ü—Ä–æ–∏–≥—Ä—ã—à:</b> ${match.bet} ‚ÇΩ`;

    return `
${heading}

<b>üñº –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç:</b>
"${analyze.originalPromptRu}"

<b>${yourLabel}:</b>
"${playerPrompt}"

<b>${oppLabel}:</b>
"${oppPrompt}"

<b>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:</b>
<b>–í–∞—à–∞ —Ç–æ—á–Ω–æ—Å—Ç—å:</b> ${playerAcc}%
<b>–¢–æ—á–Ω–æ—Å—Ç—å —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:</b> ${oppAcc}%
<b>–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:</b>
<pre>${analyze.reasoning}</pre>

${payoutText}

<b>üë§ –°–æ–ø–µ—Ä–Ω–∏–∫:</b> ${(opponent.usernameVisibility) ? await getUsername(opponent) : '#hide'}
    `;
};

export const genWinPromptText = async (match: Match, analyze: PromptAccuracyResult, player: User) => {
    let opponent = (match.player1.id === player.id) ? match.player2 : match.player1

    return `
<b>üèÜ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - –í—ã –ø–æ–±–µ–¥–∏–ª–∏!</b>

<b>üñº –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç:</b>
"${analyze.originalPromptRu}"

<b>‚úÖ –í–∞—à –æ—Ç–≤–µ—Ç:</b>
"${(match.player1.id === player.id) ? match.player1Prompt : match.player2Prompt}"

<b>‚ùå –û—Ç–≤–µ—Ç —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:</b>
"${(match.player1.id === player.id) ? match.player2Prompt : match.player1Prompt}"

<b>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:</b>
<b>–í–∞—à–∞ —Ç–æ—á–Ω–æ—Å—Ç—å:</b> ${(match.player1.id === player.id) ? analyze.player1Accuracy : analyze.player2Accuracy}%
<b>–¢–æ—á–Ω–æ—Å—Ç—å —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:</b> ${(match.player1.id === player.id) ? analyze.player2Accuracy : analyze.player1Accuracy}%
<b>–û–±—å—è—Å–Ω–µ–Ω–∏–µ:</b> 
<pre>${analyze.reasoning}</pre>

<b>üí∞ –í—ã–∏–≥—Ä—ã—à:</b> ${match.bet * 2 - getPercent(match.bet * 2, 10)} ‚ÇΩ
(–∑–∞ –≤—ã—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã 10%)

<b>üë§ –°–æ–ø–µ—Ä–Ω–∏–∫:</b> ${(opponent.usernameVisibility) ? await getUsername(opponent) : '#hide'}
        `
}
export const genLosePromptText = async (match: Match, analyze: PromptAccuracyResult, player: User) => {
    let opponent = (match.player1.id === player.id) ? match.player2 : match.player1

    return `
<b>üôàÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏è –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.</b>

<b>üñº –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç:</b>
"${analyze.originalPromptRu}"

<b>‚ùå –í–∞—à –æ—Ç–≤–µ—Ç:</b>
"${(match.player1.id === player.id) ? match.player1Prompt : match.player2Prompt}"

<b>‚úÖ –û—Ç–≤–µ—Ç —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:</b>
"${(match.player1.id === player.id) ? match.player2Prompt : match.player1Prompt}"

<b>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:</b>
<b>–í–∞—à–∞ —Ç–æ—á–Ω–æ—Å—Ç—å:</b> ${(match.player1.id === player.id) ? analyze.player1Accuracy : analyze.player2Accuracy}%
<b>–¢–æ—á–Ω–æ—Å—Ç—å —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:</b> ${(match.player1.id === player.id) ? analyze.player2Accuracy : analyze.player1Accuracy}%
<b>–û–±—å—è—Å–Ω–µ–Ω–∏–µ:</b> 
<pre>${analyze.reasoning}</pre>

<b>üí∞ –ü—Ä–æ–∏–≥—Ä—ã—à:</b> ${match.bet} ‚ÇΩ

<b>üë§ –°–æ–ø–µ—Ä–Ω–∏–∫:</b> ${(opponent.usernameVisibility) ? await getUsername(opponent) : '#hide'}
        `
}